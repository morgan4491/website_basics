/* VARIABLES */
:root {
    --highlightColor: #4bc385;
} 
/* :root is used to apply this variable to all elements tied to the html file. You can create private variables within a selector as well. The variable itself is created using the '--' (double dash) */


/* RESETS */
/* Consider creating a 'resets.css' file for all resets */

html, body {
    height: 100%;
}
body {
    display: flex;
    flex-direction: column;
    background: #2c2e44;
    margin: 0;
    font-family: sans-serif;
    overflow-x: hidden;
}

h3 {
    margin: 0;
}

a {
    text-decoration: none;
}

/* ANIMATIONS */
@keyframes slide-in {
    from {
        transform: translateX(-300%);
    }

    to {
        transform: translateX(0);
    }
}

/* CUSTOM STYLES */
header {
    /* Aligns the direct children on a row, from left to right */
    display: flex;
    /* Once you set display: flex, you can align items vertically and horizontally with flexbox properties */
    /* Align items will align the direct children on the y-axis (top to bottom) */
    align-items: center;
    /* Push the direct children as far apart as possible, using the space between them (x-axis) */
    /* justify-content: space-between; */
    background: #111527d9;
    padding: 25px 7% 20px;
}

header nav {
    /* Percentage values are always a percentage of the parent's value(width/height) */
    margin-left: 150px;
}

header a {
    color: #d58b14;
}

/* when the same style being used for multiple selections, you can use 'comma' to add another seletor */
header a:hover, header a.active {
    text-decoration: underline;
}

header nav a {
    color: #fff;
}

/* Selecct all links with the nav except the last one*/
header nav a:not(:last-child) {
    margin-right: 10px;
}

main {
    display: flex;
    justify-content: space-between;
    flex: 1;
    padding: 45px 3% 0 10%;
    background-image: linear-gradient(rgba(29, 35, 73, 0.4), rgba(0, 0, 0, 0.6)), url(../images/IMG_2625.PNG); /* Here we are doing two things: 1) stacking one image on top of another and 2) using the linear gradient styling to show how you can use a 'filter' of sorts to transition a gradient over your image *VERY USEFUL WHEN YOUR IMAGE IS BRIGHT AND YOU NEED TO ADD MORE CONTRAST BETWEEN IMAGE AND WORDS ON YOUR WEBPAGE* */
    background-size: cover;
}

.search-container {
    display: inline-block;
    align-items: center;
}

.search-icon {
    width: 20px;
    height: 20px;
}

#searchbutton {
    height: 20px;
    width: 20px;
    border: 0;
}

#p-button {
    margin-left: 10px;
}

.software-button {
    margin-top: 30px;
    margin-left: 15%;
    background: none;
    border: 2px solid var(--highlightColor);
    padding: 0 0 0 25px;
    color: white;
    text-transform: uppercase;
    cursor: pointer;
    display: flex; /* display flex AND align-items was used to center the 'Software Developer' text, within the button */
    align-items: center;
    transition: all .4s; /* This animates the transition when hovering over the button (hover criteria below) */ /* Using transition property in the button selector vs. the hover selector, allows the transition to apply both directions (ie. transition occurs when you first hover AND when you let go) */
}

.software-button:hover {
    background: #36b674dd;
    color: #111527d9;
    transform: translateX(10px);
}

aside {
    display: flex;
    align-items: center;
    transform: rotate(90deg);
    position: relative;
    left: 70px;
}

aside i {
    margin-right: 8px;
    color: #fff;
}

p.hello {
    color: var(--highlightColor);
    font-size: 1.5rem; /* using 'rem' uses the multiplier (1.5 in this case) to change the font size, referencing the system's root size (most browsers set to 16px) */
    padding: 45px 0 0 15%;
}

aside p {
    color: var(--highlightColor);
    margin-right: 15px;
}

h1 {
    color: white;
    font-size: 2.5rem;
    text-transform: uppercase;
    padding: 0 0 0 15%;
    margin: 0;
    animation: slide-in 1s;
}

/* .rotated-text {
    display: flex;
    position: absolute; 
    right: 0; /* Aligns the text to the right */
    /* transform: rotate(90deg); /* Rotates the text 90 degrees clockwise */
   /* white-space: nowrap; /* Prevents the text from wrapping */
   /* top: 200px;
} */

button i{
    color: #111527d9;
    font-size: 1.5rem;
    background: var(--highlightColor);
    padding: 10px 10px;
    margin: 0 0 0 15px;
}

footer {
    display: flex;
    justify-content: space-between;
    background: #333956d9;
    padding: 30px 7%;
    color: #bbb;
}

/* MEDIA QUERIES */
@media (max-width: 700px) { /* This is saying - when the viewers screen size is 700px or less, the 'main' styling properties will be adjusted to the settings below. You only need to add the properties you want changed, you do not need to include all properties that were  */
    main {
        background-position: right;
        background-image: linear-gradient(rgba(29, 35, 73, 0.4), rgba(0, 0, 0, 0.6)), url(../images/IMG_2625.PNG);
    }
}

@media (max-width: 400px) {
    main {
        background-position: 80% 100%;
    }
}